items:
  - name: Introduction
    topicUid: introduction
    items:
      - name: Quick Examples
        topicUid: what-is-postsharp
      - name: Why Use PostSharp
        topicUid: benefits
        items:
          - name: Which Problems Does PostSharp Solve
            topicUid: solved-problems
          - name: Benefits of Pattern-Aware Compiler Extensions
            topicUid: pattern-aware-compilers
          - name: Benefits of PostSharp vs Alternatives
            topicUid: comparative-benefits
      - name: How Does PostSharp Work
        topicUid: how-it-works
        items:
          - name: Key Technologies
            topicUid: technologies
      - name: How to Learn PostSharp
        topicUid: getting-started
        items:
          - name: "Architecture Role: Selecting and Creating Aspects"
            topicUid: getting-started-architecture
          - name: "Deployment Role: Installing and Deploying PostSharp"
            topicUid: getting-started-deployment
          - name: "Developer Role: Using Aspects"
            topicUid: getting-started-development
      - name: What's New
        topicUid: whats-new
        items:
          - name: What's New in PostSharp 2025.0
            topicUid: whats-new-20250
              - name: Breaking Changes in PostSharp 2025.0
                topicUid: breaking-changes-20250
          - name: What's New in PostSharp 2024.1
            topicUid: whats-new-20241
          - name: What's New in PostSharp 2024.0
            topicUid: whats-new-20240
            items:
              - name: Breaking Changes in PostSharp 2024.0
                topicUid: breaking-changes-20240
          - name: What's New in PostSharp 2023.0
            topicUid: whats-new-20230
          - name: What's New in PostSharp 6.10
            topicUid: whats-new-610
          - name: What's New in PostSharp 6.9
            topicUid: whats-new-69
          - name: What's New in PostSharp 6.8
            topicUid: whats-new-68
          - name: What's New in PostSharp 6.7
            topicUid: whats-new-67
            items:
              - name: Breaking Changes in PostSharp 6.7
                topicUid: breaking-changes-67
          - name: What's New in PostSharp 6.6
            topicUid: whats-new-66
            items:
              - name: Breaking Changes in PostSharp 6.6
                topicUid: breaking-changes-66
          - name: What's New in PostSharp 6.5
            topicUid: whats-new-65
            items:
              - name: Breaking Changes in PostSharp 6.5
                topicUid: breaking-changes-65
          - name: What's New in PostSharp 6.4
            topicUid: whats-new-64
            items:
              - name: Breaking Changes in PostSharp 6.4
                topicUid: breaking-changes-64
          - name: What's New in PostSharp 6.3
            topicUid: whats-new-63
            items:
              - name: Breaking Changes in PostSharp 6.3
                topicUid: breaking-changes-63
          - name: What's New in PostSharp 6.2
            topicUid: whats-new-62
            items:
              - name: Breaking Changes in PostSharp 6.2
                topicUid: breaking-changes-62
          - name: What's New in PostSharp 6.1
            topicUid: whats-new-61
            items:
              - name: Breaking Changes in PostSharp 6.1
                topicUid: breaking-changes-61
          - name: What's New in PostSharp 6.0
            topicUid: whats-new-60
            items:
              - name: Breaking Changes in PostSharp 6.0
                topicUid: breaking-changes-60
          - name: What's New in PostSharp 5.0
            topicUid: whats-new-50
            items:
              - name: Breaking Changes in PostSharp 5.0
                topicUid: breaking-changes-50
          - name: What's New in PostSharp 4.3
            topicUid: whats-new-43
          - name: What's New in PostSharp 4.2
            topicUid: whats-new-42
          - name: What's New in PostSharp 4.1
            topicUid: whats-new-41
          - name: What's New in PostSharp 4.0
            topicUid: whats-new-40
          - name: What's New in PostSharp 3.1
            topicUid: whats-new-31
          - name: What's New in PostSharp 3.0
            topicUid: whats-new-30
          - name: What's New in PostSharp 2.1
            topicUid: whats-new-21
          - name: What's New in PostSharp 2.0
            topicUid: whats-new-20
          - name: What's New in PostSharp 1.5
            topicUid: whats-new-15
  - name: Deployment and Configuration
    topicUid: deployment-configuration
    items:
      - name: Deployment
        topicUid: deployment
        items:
          - name: Requirements and Compatibility
            topicUid: requirements
            items:
              - name: Requirements of PostSharp 2025.0
                topicUid: requirements-20250
              - name: Requirements of PostSharp 2024.1
                topicUid: requirements-20241
              - name: Requirements of PostSharp 2024.0
                topicUid: requirements-20240
              - name: Requirements of PostSharp 2023.0
                topicUid: requirements-20230
              - name: Requirements of PostSharp 6.10
                topicUid: requirements-610
              - name: Requirements of PostSharp 6.9
                topicUid: requirements-69
              - name: Requirements of PostSharp 6.8
                topicUid: requirements-68
              - name: Requirements of PostSharp 6.7
                topicUid: requirements-67
              - name: Requirements of PostSharp 6.6
                topicUid: requirements-66
              - name: Requirements of PostSharp 6.5
                topicUid: requirements-65
              - name: Requirements of PostSharp 6.4
                topicUid: requirements-64
              - name: Requirements of PostSharp 6.3
                topicUid: requirements-63
              - name: Requirements of PostSharp 6.2
                topicUid: requirements-62
              - name: Requirements of PostSharp 6.1
                topicUid: requirements-61
              - name: Requirements of PostSharp 6.0
                topicUid: requirements-60
              - name: Requirements of PostSharp 5.0
                topicUid: requirements-50
              - name: Requirements of PostSharp 4.3
                topicUid: requirements-43
              - name: Compatibility with Xamarin
                topicUid: xamarin
              - name: Compatibility with Blazor
                topicUid: blazor
              - name: BinaryFormatter security
                topicUid: binary-formatter-security
          - name: PostSharp Components
            topicUid: postsharp-components
          - name: Installing Visual Studio Tools for Metalama and PostSharp
            topicUid: installation
          - name: Installing PostSharp Into a Project
            topicUid: install-compiler
          - name: Using PostSharp on a Build Server
            topicUid: build-server
            items:
              - name: Restoring Packages at Build Time
                topicUid: nuget-restore
          - name: Upgrading from a Previous Version of PostSharp
            topicUid: upgrade
          - name: Installing PostSharp Unattended
            topicUid: postsharp-unattended
          - name: Uninstalling PostSharp
            topicUid: uninstalling
          - name: Deploying PostSharp to End-User Devices
            topicUid: deployment-end-user
      - name: Licensing
        topicUid: licensing
        items:
          - name: Deploying License Keys
            topicUid: deploying-keys
          - name: License Types
            topicUid: license-types
            items:
              - name: Per-Developer Licenses
                topicUid: per-user-licenses
                items:
                  - name: Sharing Source Code With Unlicensed Teams
                    topicUid: licensing-shared-source-code
              - name: PostSharp Essentials
                topicUid: express-limitations
          - name: License Audit
            topicUid: license-audit
          - name: Installing and Servicing PostSharp License Server
            topicUid: license-server-admin
          - name: License Troubleshooting
            topicUid: license-troubleshooting
      - name: Configuration
        topicUid: configuration
        items:
          - name: Configuring Projects in Visual Studio
            topicUid: configuration-vs-project
          - name: Configuring Projects Using MSBuild
            topicUid: configuration-msbuild
          - name: Configuring Projects Using postsharp.config
            topicUid: configuration-system
            items:
              - name: Configuration File Schema Reference
                topicUid: configuration-schema
              - name: Including CLR Objects in Configuration
                topicUid: configuration-serialization
              - name: Using Expressions in Configuration Files
                topicUid: configuration-xpath
          - name: Well-Known MSBuild Properties
            topicUid: msbuild-properties
          - name: Well-Known PostSharp Properties
            topicUid: configuration-postsharp
          - name: Accessing Configuration from Source Code
            topicUid: configuration-consuming
          - name: Working with Errors, Warnings, and Messages
            topicUid: messages
            items:
              - name: Ignoring and Escalating Warnings
                topicUid: ignoring-warnings
              - name: Emitting Errors, Warnings, and Messages
                topicUid: emitting-errors
          - name: Resolution of Assembly Binding Redirections
            topicUid: assembly-binding-resolution
  - name: Adding Aspects to Code
    topicUid: applying-aspects
    items:
      - name: Adding Aspects Declaratively Using Attributes
        topicUid: multicast
        items:
          - name: Adding Aspects to a Single Declaration Using Attributes
            topicUid: apply-to-single-declaration
          - name: Adding Aspects to Multiple Declarations Using Attributes
            topicUid: attribute-multicasting
            items:
              - name: Understanding Attribute Multicasting
                topicUid: multicast-conceptual
          - name: Adding Aspects to Derived Classes and Methods Using Attributes
            topicUid: aspect-inheritance
            items:
              - name: Understanding Aspect Inheritance
                topicUid: multicast-inheritance
          - name: Overriding and Removing Aspect Instances
            topicUid: multicast-override
          - name: Reflecting Aspect Instances at Runtime
            topicUid: multicast-reflection
      - name: Adding Aspects Using XML
        topicUid: xml-multicasting
      - name: Adding Aspects Programmatically using IAspectProvider
        topicUid: iaspectprovider
  - name: Logging
    topicUid: logging
    items:
      - name: Getting Started with PostSharp Logging
        topicUid: add-logging
        items:
          - name: "Licensing of PostSharp Logging: Production vs Developer Mode"
            topicUid: logging-license
      - name: Connecting to Source and Target Logging Frameworks
        topicUid: backends
        items:
          - name: Logging with System.Console
            topicUid: logging-console
          - name: Logging with System.Diagnostics.TraceSource
            topicUid: logging-tracesource
          - name: Logging with System.Diagnostics.Trace
            topicUid: logging-trace
          - name: Logging with log4net
            topicUid: log4net
          - name: Logging with NLog
            topicUid: nlog
          - name: Logging with Serilog
            topicUid: serilog
          - name: Logging with ETW
            topicUid: etw
          - name: Logging with Common.Logging
            topicUid: common-logging
          - name: Logging with Application Insights
            topicUid: application-insights
          - name: Logging with ASP.NET Core
            topicUid: logging-aspnetcore
          - name: Multiplexing Log Output to Several Frameworks
            topicUid: log-multiplexer
          - name: Collecting Logs from Other Frameworks
            topicUid: log-collecting
          - name: Instrumentation of ASP.NET and HttpClient
            topicUid: logging-instrumentation
          - name: Building Your Own Logging Backend (Adapter)
            topicUid: custom-logging-backend
      - name: Formatting Log Records
        topicUid: logging-customizing
        items:
          - name: Implementing a Custom Formatter
            topicUid: custom-formatter
      - name: Adding Manual Logging
        topicUid: manual-logging
        items:
          - name: Writing Custom Messages
            topicUid: log-custom-messages
          - name: Working with Custom Activities
            topicUid: log-custom-activities
          - name: Adding Properties to Messages and Activities
            topicUid: log-properties
      - name: Adjusting Logging Verbosity
        topicUid: log-enabling
        items:
          - name: Adjusting Logging Verbosity Programmatically
            topicUid: logging-verbosity-api
          - name: Defining Your Own Logging Transactions
            topicUid: custom-logging-transactions
      - name: Hiding sensitive data when logging
        topicUid: logging-hiding-sensitive-data
      - name: Logging in a Distributed System
        topicUid: distributed-logging
      - name: Handling Logging Exceptions
        topicUid: logging-exception-handling
      - name: Troubleshooting 
        topicUid: logging-troubleshooting
  - name: Contracts
    topicUid: contracts
    items:
      - name: Adding Contracts to Code
        topicUid: adding-contracts
      - name: Creating Custom Contracts
        topicUid: custom-contracts
      - name: Localizing Contract Error Messages
        topicUid: contract-localization
      - name: Customizing Contract Exceptions
        topicUid: contract-custom-exceptions
  - name: INotifyPropertyChanged
    topicUid: inotifypropertychanged
    items:
      - name: Implementing INotifyPropertyChanged
        topicUid: inotifypropertychanged-add
      - name: Implementing INotifyPropertyChanged with Properties that Depend on Other Objects
        topicUid: inotifypropertychanged-dependencies
      - name: Implementing INotifyPropertyChanging
        topicUid: inotifypropertychanging
      - name: Handling Corner Cases of the NotifyPropertyChanged Aspect
        topicUid: inotifypropertychanged-customization
      - name: Integrating the NotifyPropertyChanged Aspect with UI Frameworks
        topicUid: inotifypropertychanged-frameworks
        items:
          - name: INotifyPropertyChanged and Caliburn.Micro
            topicUid: inotifypropertychanged-caliburnmicro
          - name: INotifyPropertyChanged and MVVM Light Toolkit
            topicUid: inotifypropertychanged-mvvmlight
      - name: Understanding the NotifyPropertyChanged Aspect
        topicUid: inotifypropertychanged-conceptual
      - name: Suppressing False Positives of the NotifyPropertyChanged Aspect
        topicUid: inotifypropertychanged-false-positives
  - name: Weak Event
    topicUid: weak-event
  - name: XAML
    topicUid: xaml
    items:
      - name: Command
        topicUid: command
      - name: Dependency Property
        topicUid: dependency-property
      - name: Attached Property
        topicUid: attached-property
  - name: Parent/Child, Visitor and Disposable
    topicUid: aggregatable
    items:
      - name: Annotating an Object Model for Parent/Child Relationships (Aggregatable)
        topicUid: aggregatable-adding
        items:
          - name: Rule-Based Annotation
            topicUid: aggregatable-adding-programmatically
      - name: Enumerating Child Objects (Visitor)
        topicUid: aggregatable-visitor
      - name: Automatically Disposing Children Objects (Disposable)
        topicUid: disposable
      - name: Working With Child Collections
        topicUid: advisable-collections
  - name: Undo/Redo
    topicUid: undoredo
    items:
      - name: Making Your Model Recordable
        topicUid: undoredo-start
      - name: Adding Undo/Redo to the User Interface
        topicUid: undoredo-ui
      - name: Customizing Undo/Redo Operation Names
        topicUid: undoredo-operation-name
      - name: Assigning Recorders Manually
        topicUid: undoredo-recorder
      - name: Adding Callbacks on Undo and Redo
        topicUid: undoredo-callbacks
      - name: Understanding the Recordable Aspect
        topicUid: undoredo-conceptual
  - name: Caching
    topicUid: caching
    items:
      - name: Caching Method Return Values
        topicUid: caching-getting-started
      - name: Removing Items From the Cache
        topicUid: caching-invalidation
      - name: Working with Cache Dependencies
        topicUid: caching-dependencies
      - name: Customizing Cache Keys
        topicUid: caching-keys
      - name: Caching Back-Ends
        topicUid: caching-backends
        items:
          - name: Using In-Memory Cache
            topicUid: caching-memory
          - name: Using Redis Cache
            topicUid: caching-redis
      - name: Synchronizing Local In-Memory Caches for Multiple Servers
        topicUid: caching-pubsub
      - name: Caching Special Types with Value Adapters
        topicUid: caching-value-adapters
      - name: Preventing Concurrent Execution of Cached Methods
        topicUid: cache-locking
      - name: Troubleshooting Caching
        topicUid: caching-logging-interaction
  - name: Multithreading
    topicUid: threading-library
    items:
      - name: Writing Thread-Safe Code with Threading Models
        topicUid: threading-models
        items:
          - name: Immutable Threading Model
            topicUid: immutable
          - name: Freezable Threading Model
            topicUid: freezable
          - name: Thread Affine Threading Model
            topicUid: thread-affine
          - name: Synchronized Threading Model
            topicUid: synchronized
          - name: Reader/Writer Synchronized Threading Model
            topicUid: reader-writer-synchronized
          - name: Actor Threading Model
            topicUid: actor
          - name: Thread-Unsafe Threading Model
            topicUid: thread-unsafe
          - name: Making a Whole Project or Solution Thread Safe
            topicUid: thread-safety-policy
          - name: Opting In and Out From Thread Safety
            topicUid: threading-waiving-verification
          - name: Compatibility of Threading Models
            topicUid: threading-model-compatibility
          - name: Enabling and Disabling Runtime Verification
            topicUid: threading-runtime-verification
          - name: Run-Time Performance of Threading Model
            topicUid: threading-performance
      - name: Dispatching a Method to Background
        topicUid: background-dispatching
      - name: Dispatching a Method to the UI Thread
        topicUid: ui-dispatching
  - name: Developing Custom Aspects
    topicUid: custom-aspects
    items:
      - name: Developing Simple Aspects
        topicUid: simple-aspects
        items:
          - name: Injecting Behaviors Before and After Method Execution
            topicUid: method-decorator
          - name: Handling Exceptions
            topicUid: exception-handling
          - name: Intercepting Methods
            topicUid: method-interception
          - name: Intercepting Properties and Fields
            topicUid: location-interception
          - name: Intercepting Events
            topicUid: event-interception
          - name: Introducing Custom Attributes
            topicUid: attribute-introduction
          - name: Introducing Managed Resources
            topicUid: resource-introduction
          - name: Semantic Advising of Iterator and Async Methods
            topicUid: semantic-advising
      - name: Understanding Aspect Lifetime and Scope 
        topicUid: aspect-lifetime
      - name: Initializing Aspects
        topicUid: aspect-initialization
        items:
          - name: Coping with Custom Object Serializers
            topicUid: instance-initialization
      - name: Validating Aspect Usage
        topicUid: aspect-validation
      - name: Developing Composite Aspects
        topicUid: complex-aspects
        items:
          - name: Adding Behaviors to Existing Members
            topicUid: advices
          - name: Introducing Interfaces, Methods, Properties and Events into Existing Classes
            topicUid: code-injections
          - name: Accessing Members of the Target Class
            topicUid: members
          - name: Adding Aspects Dynamically
            topicUid: aspect-provider
      - name: Coping with Several Aspects on the Same Target
        topicUid: aspect-dependencies
        items:
          - name: Ordering Advices
            topicUid: advice-ordering
      - name: Understanding Aspect Serialization
        topicUid: aspect-serialization
      - name: Aspect Configuration
        topicUid: aspect-configuration
      - name: Customizing Aspect Appearance in Visual Studio
        topicUid: customize-vs-appearance
        items:
          - name: Customizing Aspect Description in CodeLens and Tooltips
            topicUid: customizing-aspect-description
          - name: Estimating Code Savings
            topicUid: estimating-code-saving
          - name: Pushing Information to Visual Studio Programmatically
            topicUid: programmatic-tooltip
      - name: Consuming Dependencies from an Aspect
        topicUid: consuming-dependencies
        items:
          - name: Using a Global Composition Container
            topicUid: global-service-container
          - name: Using a Global Service Locator
            topicUid: global-service-locator
          - name: Using Dynamic Dependency Resolution
            topicUid: dynamic-dependency-resolution
          - name: Using Contextual Dependency Resolution
            topicUid: contextual-dependency-resolution
          - name: Importing Dependencies from the Target Object
            topicUid: importing-dependencies
  - name: Validating Architecture
    topicUid: constraints
    items:
      - name: Restricting Interface Implementation
        topicUid: control-implementation
      - name: Controlling Component Visibility Beyond Private and Internal
        topicUid: control-visibility
      - name: Developing Custom Architectural Constraints
        topicUid: custom-constraints
  - name: Testing and Debugging
    topicUid: testing-aspects
    items:
      - name: Debugging Run-Time Logic
        topicUid: debugging-runtime
      - name: Debugging Build-Time Logic
        topicUid: debugging-buildtime
      - name: Testing that an Aspect has been Applied
        topicUid: testing-application
      - name: Testing Run-Time Logic
        topicUid: simple-tests
  - name: Miscellaneous
    topicUid: patterns-misc
    items:
      - name: Executing Code Just After the Assembly is Loaded
        topicUid: module-initializer
      - name: Deprecated Features
        topicUid: deprecated-features
        items:
          - name: Installing PostSharp without NuGet
            topicUid: install-without-nuget
          - name: Detecting Deadlocks at Runtime
            topicUid: deadlock-detection
  - name: API Reference
    topicUid: api
